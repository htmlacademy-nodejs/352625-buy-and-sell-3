DROP TABLE IF EXISTS types;
DROP TABLE IF EXISTS pictures;
DROP TABLE IF EXISTS authors;
DROP TABLE IF EXISTS categories;
DROP TABLE IF EXISTS offers;
DROP TABLE IF EXISTS offers_categories;
DROP TABLE IF EXISTS comments;

CREATE TABLE types
(
  id SERIAL PRIMARY KEY,
  name VARCHAR(50) NOT NULL
);

CREATE TABLE pictures
(
  id SERIAL PRIMARY KEY,
  type VARCHAR(50) NOT NULL,
  normal VARCHAR(50) NOT NULL,
  double VARCHAR(50) NOT NULL
);

CREATE TABLE authors
(
  id SERIAL PRIMARY KEY,
  firstname VARCHAR(50) NOT NULL,
  lastname VARCHAR(50) NOT NULL,
  email VARCHAR(50) NOT NULL,
  password VARCHAR(50) NOT NULL,
  picture_id INTEGER NOT NULL,
  FOREIGN KEY (picture_id) REFERENCES pictures (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE categories
(
  id SERIAL PRIMARY KEY,
  picture_id INTEGER NOT NULL,
  FOREIGN KEY (picture_id) REFERENCES pictures (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  name VARCHAR(50) NOT NULL
);

CREATE TABLE offers
(
  id SERIAL PRIMARY KEY,
  author_id INTEGER NOT NULL,
  FOREIGN KEY (author_id) REFERENCES authors (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  type_id INTEGER NOT NULL,
  FOREIGN KEY (type_id) REFERENCES types (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  picture_id INTEGER NOT NULL,
  FOREIGN KEY (picture_id) REFERENCES pictures (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  created_date DATE NOT NULL,
  title VARCHAR(50) NOT NULL,
  description VARCHAR(500) NOT NULL,
  sum MONEY NOT NULL
);

CREATE TABLE offers_categories
(
  offer_id INTEGER NOT NULL,
  FOREIGN KEY (offer_id) REFERENCES offers (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  category_id INTEGER NOT NULL,
  FOREIGN KEY (category_id) REFERENCES categories (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT offers_categories_pk PRIMARY KEY (offer_id, category_id)
);

CREATE TABLE comments
(
  id SERIAL PRIMARY KEY,
  author_id INTEGER NOT NULL,
  FOREIGN KEY (author_id) REFERENCES authors (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  offer_id INTEGER NOT NULL,
  FOREIGN KEY (offer_id) REFERENCES offers (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  created_date DATE NOT NULL,
  text VARCHAR(100) NOT NULL
);
